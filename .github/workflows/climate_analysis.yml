name: Climate Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      analysis_mode:
        description: 'Analysis mode'
        required: true
        default: 'quick'
        type: choice
        options:
          - quick
          - paper
      analysis_type:
        description: 'Scenario type (for quick mode)'
        required: false
        default: 'baseline'
        type: choice
        options:
          - baseline
          - heatwave
          - extreme

jobs:
  analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 120  # 2 hours for full paper analysis
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev libopenblas-dev gfortran
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        echo "Installed packages:"
        pip list
    
    - name: Verify imports
      run: |
        python -c "import numpy; print(f'NumPy: {numpy.__version__}')"
        python -c "import scipy; print(f'SciPy: {scipy.__version__}')"
        python -c "import matplotlib; print(f'Matplotlib: {matplotlib.__version__}')"
        python -c "import networkx; print(f'NetworkX: {networkx.__version__}')"
        python -c "import psutil; print(f'psutil: {psutil.__version__}')"
    
    - name: Run analysis
      env:
        PYTHONPATH: ${{ github.workspace }}
        MPLBACKEND: Agg
        OMP_NUM_THREADS: 2
      run: |
        # Use workflow inputs or defaults
        MODE="${{ github.event.inputs.analysis_mode || 'quick' }}"
        TYPE="${{ github.event.inputs.analysis_type || 'baseline' }}"
        
        echo "Analysis mode: $MODE"
        
        if [ "$MODE" = "paper" ]; then
          echo "Running FULL PAPER ANALYSIS (this will take 30-60 minutes)..."
          python run_full_analysis.py --output-dir paper_results
        else
          echo "Running QUICK ANALYSIS (type: $TYPE)..."
          python main.py --analysis-type $TYPE --quick-mode --output-dir results
        fi
    
    - name: List results
      if: always()
      run: |
        echo "=== Results ==="
        if [ "${{ github.event.inputs.analysis_mode }}" = "paper" ]; then
          if [ -d paper_results ]; then
            echo "Paper results directory:"
            ls -la paper_results/
            echo ""
            echo "PNG files generated:"
            find paper_results -name "*.png" -type f | sort
            echo ""
            echo "Data files generated:"
            find paper_results -name "*.npz" -type f | sort
          else
            echo "No paper_results directory found"
          fi
        else
          if [ -d results ]; then
            echo "Quick results directory:"
            ls -la results/
          else
            echo "No results directory found"
          fi
        fi
    
    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: analysis-results-${{ github.run_number }}
        path: |
          results/
          paper_results/
        retention-days: 30
    
    - name: Create summary
      if: always()
      run: |
        MODE="${{ github.event.inputs.analysis_mode || 'quick' }}"
        
        echo "## Analysis Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Mode**: $MODE" >> $GITHUB_STEP_SUMMARY
        echo "- **Run**: #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "$MODE" = "paper" ] && [ -f paper_results/paper_analysis_summary.txt ]; then
          echo "### Paper Analysis Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat paper_results/paper_analysis_summary.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        elif [ -f results/*_summary.txt ]; then
          echo "### Quick Analysis Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat results/*_summary.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
